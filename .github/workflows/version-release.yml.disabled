name: Auto Release on Version Change

on:
  push:
    branches: [main]
    paths:
      - 'package.json'  # Only trigger when package.json changes (version bump)

permissions:
  contents: write
  id-token: write

jobs:
  check-and-release:
    name: Check Version and Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for changelog

    - name: Check if version needs release
      id: version_check
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "Current version: $VERSION"

        # Check if this version already has a tag
        if git tag | grep -q "^v$VERSION$"; then
          echo "✅ Version v$VERSION already released, skipping"
          echo "should_release=false" >> $GITHUB_OUTPUT
        else
          echo "🆕 New version detected: v$VERSION - will release"
          echo "should_release=true" >> $GITHUB_OUTPUT
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Setup Node.js
      if: steps.version_check.outputs.should_release == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      if: steps.version_check.outputs.should_release == 'true'
      run: npm ci

    - name: Lint
      if: steps.version_check.outputs.should_release == 'true'
      run: npm run lint

    - name: Build
      if: steps.version_check.outputs.should_release == 'true'
      run: npm run build

    - name: Test
      if: steps.version_check.outputs.should_release == 'true'
      run: npm run test:ci

    - name: Test examples
      if: steps.version_check.outputs.should_release == 'true'
      run: npm run audit:examples

    - name: Upload coverage to Codecov
      if: steps.version_check.outputs.should_release == 'true'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: true
        flags: release
        name: codecov-release
        verbose: true

    - name: Create package
      if: steps.version_check.outputs.should_release == 'true'
      run: npm pack

    - name: Create and push tag
      if: steps.version_check.outputs.should_release == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag ${{ steps.version_check.outputs.version }} -m "Release ${{ steps.version_check.outputs.version }}"
        git push origin ${{ steps.version_check.outputs.version }}

    - name: Publish to NPM
      if: steps.version_check.outputs.should_release == 'true'
      run: |
        echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
        npm publish --access public
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Publish to JSR
      if: steps.version_check.outputs.should_release == 'true'
      run: npx jsr publish --allow-slow-types

    - name: Generate changelog
      if: steps.version_check.outputs.should_release == 'true'
      id: release_notes
      run: |
        NOTES="$RUNNER_TEMP/release_notes.md"
        {
          echo "## 🎉 SomonScript ${{ steps.version_check.outputs.version }}";
          echo "";
          echo "### ✨ What's New";
          echo "";

          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "");
          if [ -n "$LAST_TAG" ]; then
            echo "Changes since $LAST_TAG:";
            echo "";
            git log --pretty=format:"- %s" "$LAST_TAG"..HEAD;
          else
            echo "- Initial release of ${{ steps.version_check.outputs.version }}";
          fi

          echo "";
          echo "";
          echo "### 📦 Installation";
          echo "";
          echo '```bash';
          echo 'npm install -g @lindentech/somon-script';
          echo '```';
        } > "$NOTES"
        echo "path=$NOTES" >> "$GITHUB_OUTPUT"

    - name: Create GitHub Release
      if: steps.version_check.outputs.should_release == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version_check.outputs.version }}
        name: "SomonScript ${{ steps.version_check.outputs.version }}"
        body_path: ${{ steps.release_notes.outputs.path }}
        files: '*.tgz'
        draft: false
        prerelease: false

    - name: Summary
      if: steps.version_check.outputs.should_release == 'true'
      run: |
        echo "🎉 Release ${{ steps.version_check.outputs.version }} completed successfully!"
        echo ""
        echo "✅ Tests passed"
        echo "✅ Git tag created and pushed"
        echo "✅ NPM package published"
        echo "✅ JSR package published"
        echo "✅ GitHub release created"
        echo ""
        echo "📦 View release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version_check.outputs.version }}"

    - name: Skip message
      if: steps.version_check.outputs.should_release == 'false'
      run: echo "ℹ️ No new version to release, skipping workflow"
