// Abstract Classes (Синфҳои мавҳум) Example
чоп.сабт("=== Синфҳои Мавҳум ===");

// Abstract shape class
мавҳум синф Шакл {
    муҳофизатшуда ранг: сатр;
    
    конструктор(ранг: сатр) {
        ин.ранг = ранг;
    }
    
    // Abstract methods that must be implemented by subclasses
    мавҳум функсия ҳисоби_масоҳат(): рақам;
    мавҳум функсия ҳисоби_периметр(): рақам;
    
    // Concrete method that can be used by all subclasses
    функсия тавсифи_пурра(): сатр {
        бозгашт "Шакли " + ин.ранг + " бо масоҳати " + ин.ҳисоби_масоҳат() + " ва периметри " + ин.ҳисоби_периметр();
    }
}

// Concrete class implementing abstract class
синф Мураббаъ мерос Шакл {
    хосусӣ тараф: рақам;
    
    конструктор(ранг: сатр, тараф: рақам) {
        супер(ранг);
        ин.тараф = тараф;
    }
    
    функсия ҳисоби_масоҳат(): рақам {
        бозгашт ин.тараф * ин.тараф;
    }
    
    функсия ҳисоби_периметр(): рақам {
        бозгашт 4 * ин.тараф;
    }
}

// Another concrete class
синф Давра мерос Шакл {
    хосусӣ радиус: рақам;
    
    конструктор(ранг: сатр, радиус: рақам) {
        супер(ранг);
        ин.радиус = радиус;
    }
    
    функсия ҳисоби_масоҳат(): рақам {
        бозгашт 3.14159 * ин.радиус * ин.радиус;
    }
    
    функсия ҳисоби_периметр(): рақам {
        бозгашт 2 * 3.14159 * ин.радиус;
    }
}

// Rectangle class
синф Росткунҷа мерос Шакл {
    хосусӣ дарозӣ: рақам;
    хосусӣ паҳноӣ: рақам;
    
    конструктор(ранг: сатр, дарозӣ: рақам, паҳноӣ: рақам) {
        супер(ранг);
        ин.дарозӣ = дарозӣ;
        ин.паҳноӣ = паҳноӣ;
    }
    
    функсия ҳисоби_масоҳат(): рақам {
        бозгашт ин.дарозӣ * ин.паҳноӣ;
    }
    
    функсия ҳисоби_периметр(): рақам {
        бозгашт 2 * (ин.дарозӣ + ин.паҳноӣ);
    }
}

// Abstract class for animals
мавҳум синф Ҳайвон {
    муҳофизатшуда ном: сатр;
    муҳофизатшуда синни_сол: рақам;
    
    конструктор(ном: сатр, синни_сол: рақам) {
        ин.ном = ном;
        ин.синни_сол = синни_сол;
    }
    
    мавҳум функсия садо_баровардан(): сатр;
    мавҳум функсия ҳаракат_кардан(): сатр;
    
    функсия маълумот(): сатр {
        бозгашт ин.ном + " (" + ин.синни_сол + " сола): " + ин.садо_баровардан() + ", " + ин.ҳаракат_кардан();
    }
}

// Concrete animal classes
синф Саг мерос Ҳайвон {
    функсия садо_баровардан(): сатр {
        бозгашт "Вов-вов!";
    }
    
    функсия ҳаракат_кардан(): сатр {
        бозгашт "давидан бо 4 пой";
    }
}

синф Гурба мерос Ҳайвон {
    функсия садо_баровардан(): сатр {
        бозгашт "Мяу-мяу!";
    }
    
    функсия ҳаракат_кардан(): сатр {
        бозгашт "гаштан бо нозукӣ";
    }
}

// Usage examples
чоп.сабт("=== Истифодаи Шаклҳо ===");

тағйирёбанда мураббаъ = нав Мураббаъ("сурх", 5);
чоп.сабт(мураббаъ.тавсифи_пурра());

тағйирёбанда давра = нав Давра("кабуд", 3);
чоп.сабт(давра.тавсифи_пурра());

тағйирёбанда росткунҷа = нав Росткунҷа("сабз", 10, 5);
чоп.сабт(росткунҷа.тавсифи_пурра());

чоп.сабт("\n=== Истифодаи Ҳайвонҳо ===");

тағйирёбанда саг = нав Саг("Бобик", 3);
чоп.сабт(саг.маълумот());

тағйирёбанда гурба = нав Гурба("Мурка", 2);
чоп.сабт(гурба.маълумот());

// Polymorphism with abstract classes
чоп.сабт("\n=== Полиморфизм ===");

тағйирёбанда шаклҳо: Шакл[] = [
    нав Мураббаъ("зард", 4),
    нав Давра("сафед", 6),
    нав Росткунҷа("сиёҳ", 8, 3)
];

барои (тағйирёбанда шакл аз шаклҳо) {
    чоп.сабт("Масоҳат: " + шакл.ҳисоби_масоҳат() + ", Периметр: " + шакл.ҳисоби_периметр());
}
